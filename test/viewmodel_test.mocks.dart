// Mocks generated by Mockito 5.1.0 from annotations
// in flutter_viewmodel/test/viewmodel_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:flutter_vm/base/usecase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [UseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUseCase<I, O> extends _i1.Mock implements _i2.UseCase<I, O> {
  MockUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<O> execute(I? params) =>
      (super.noSuchMethod(Invocation.method(#execute, [params]),
          returnValue: Future<O>.value(null)) as _i3.Future<O>);
}
